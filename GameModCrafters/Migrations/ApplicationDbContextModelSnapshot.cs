// <auto-generated />
using System;
using GameModCrafters.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GameModCrafters.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GameModCrafters.Models.Commission", b =>
                {
                    b.Property<string>("CommissionId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("Budget")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CommissionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommissionStatusId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CommissionTitle")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("DelegatorId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("GameId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDone")
                        .HasColumnType("bit");

                    b.Property<bool>("Trash")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("CommissionId");

                    b.HasIndex("CommissionStatusId");

                    b.HasIndex("DelegatorId");

                    b.HasIndex("GameId");

                    b.ToTable("Commissions");
                });

            modelBuilder.Entity("GameModCrafters.Models.CommissionStatus", b =>
                {
                    b.Property<string>("CommissionStatusId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("CommissionStatusId");

                    b.ToTable("CommissionStatuses");
                });

            modelBuilder.Entity("GameModCrafters.Models.CommissionTracking", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CommissionId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("AddTime")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId", "CommissionId");

                    b.HasIndex("CommissionId");

                    b.ToTable("CommissionTrackings");
                });

            modelBuilder.Entity("GameModCrafters.Models.ContactUs", b =>
                {
                    b.Property<string>("ContactId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("SubmitTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ContactId");

                    b.HasIndex("UserId");

                    b.ToTable("ContactUsMessages");
                });

            modelBuilder.Entity("GameModCrafters.Models.Downloaded", b =>
                {
                    b.Property<string>("DownloadId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("DownloadTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("DownloadId");

                    b.HasIndex("ModId");

                    b.HasIndex("UserId");

                    b.ToTable("Downloadeds");
                });

            modelBuilder.Entity("GameModCrafters.Models.Favorite", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ModId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("AddTime")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId", "ModId");

                    b.HasIndex("ModId");

                    b.ToTable("Favorites");
                });

            modelBuilder.Entity("GameModCrafters.Models.Game", b =>
                {
                    b.Property<string>("GameId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GameName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Thumbnail")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GameId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("GameModCrafters.Models.Log", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ModId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("AddTime")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId", "ModId");

                    b.HasIndex("ModId");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("GameModCrafters.Models.Mod", b =>
                {
                    b.Property<string>("ModId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AuthorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DownloadLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GameId")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("InstallationInstructions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDone")
                        .HasColumnType("bit");

                    b.Property<string>("ModName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Thumbnail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ModId");

                    b.HasIndex("AuthorId");

                    b.HasIndex("GameId");

                    b.ToTable("Mods");
                });

            modelBuilder.Entity("GameModCrafters.Models.ModComment", b =>
                {
                    b.Property<string>("CommentId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CommentContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CommentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("CommentId");

                    b.HasIndex("ModId");

                    b.HasIndex("UserId");

                    b.ToTable("ModComments");
                });

            modelBuilder.Entity("GameModCrafters.Models.ModLike", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ModId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("Liked")
                        .HasColumnType("bit");

                    b.Property<DateTime>("RatingDate")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId", "ModId");

                    b.HasIndex("ModId");

                    b.ToTable("ModLikes");
                });

            modelBuilder.Entity("GameModCrafters.Models.ModTag", b =>
                {
                    b.Property<string>("TagId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ModId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("TagId", "ModId");

                    b.HasIndex("ModId");

                    b.ToTable("ModTags");
                });

            modelBuilder.Entity("GameModCrafters.Models.PrivateMessage", b =>
                {
                    b.Property<string>("MessageId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("MessageContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("MessageTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReceiverId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SenderId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("MessageId");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.ToTable("PrivateMessages");
                });

            modelBuilder.Entity("GameModCrafters.Models.Tag", b =>
                {
                    b.Property<string>("TagId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("TagId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("GameModCrafters.Models.Transaction", b =>
                {
                    b.Property<string>("TransactionId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CommissionId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("PayeeId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PayerId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("TransactionStatus")
                        .HasColumnType("bit");

                    b.HasKey("TransactionId");

                    b.HasIndex("CommissionId");

                    b.HasIndex("PayeeId");

                    b.HasIndex("PayerId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("GameModCrafters.Models.User", b =>
                {
                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BackgroundImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Baned")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Email");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GameModCrafters.Models.Commission", b =>
                {
                    b.HasOne("GameModCrafters.Models.CommissionStatus", "CommissionStatus")
                        .WithMany("Commissions")
                        .HasForeignKey("CommissionStatusId");

                    b.HasOne("GameModCrafters.Models.User", "Delegator")
                        .WithMany("Commission")
                        .HasForeignKey("DelegatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameModCrafters.Models.Game", "Game")
                        .WithMany("Commission")
                        .HasForeignKey("GameId");

                    b.Navigation("CommissionStatus");

                    b.Navigation("Delegator");

                    b.Navigation("Game");
                });

            modelBuilder.Entity("GameModCrafters.Models.CommissionTracking", b =>
                {
                    b.HasOne("GameModCrafters.Models.Commission", "Commission")
                        .WithMany("CommissionTrackings")
                        .HasForeignKey("CommissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameModCrafters.Models.User", "User")
                        .WithMany("CommissionTrackings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Commission");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GameModCrafters.Models.ContactUs", b =>
                {
                    b.HasOne("GameModCrafters.Models.User", "User")
                        .WithMany("ContactMessages")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GameModCrafters.Models.Downloaded", b =>
                {
                    b.HasOne("GameModCrafters.Models.Mod", "Mod")
                        .WithMany("Downloaded")
                        .HasForeignKey("ModId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameModCrafters.Models.User", "User")
                        .WithMany("Downloaded")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mod");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GameModCrafters.Models.Favorite", b =>
                {
                    b.HasOne("GameModCrafters.Models.Mod", "Mod")
                        .WithMany("Favorite")
                        .HasForeignKey("ModId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameModCrafters.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mod");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GameModCrafters.Models.Log", b =>
                {
                    b.HasOne("GameModCrafters.Models.Mod", "Mod")
                        .WithMany("Log")
                        .HasForeignKey("ModId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameModCrafters.Models.User", "User")
                        .WithMany("Log")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mod");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GameModCrafters.Models.Mod", b =>
                {
                    b.HasOne("GameModCrafters.Models.User", "Author")
                        .WithMany("Mods")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameModCrafters.Models.Game", "Game")
                        .WithMany("Mods")
                        .HasForeignKey("GameId");

                    b.Navigation("Author");

                    b.Navigation("Game");
                });

            modelBuilder.Entity("GameModCrafters.Models.ModComment", b =>
                {
                    b.HasOne("GameModCrafters.Models.Mod", "Mod")
                        .WithMany("ModComment")
                        .HasForeignKey("ModId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameModCrafters.Models.User", "User")
                        .WithMany("ModComment")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mod");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GameModCrafters.Models.ModLike", b =>
                {
                    b.HasOne("GameModCrafters.Models.Mod", "Mod")
                        .WithMany("ModLikes")
                        .HasForeignKey("ModId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameModCrafters.Models.User", "User")
                        .WithMany("ModLikes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mod");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GameModCrafters.Models.ModTag", b =>
                {
                    b.HasOne("GameModCrafters.Models.Mod", "Mod")
                        .WithMany("ModTags")
                        .HasForeignKey("ModId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameModCrafters.Models.Tag", "Tag")
                        .WithMany("ModTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mod");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("GameModCrafters.Models.PrivateMessage", b =>
                {
                    b.HasOne("GameModCrafters.Models.User", "Receiver")
                        .WithMany("ReceivedMessages")
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GameModCrafters.Models.User", "Sender")
                        .WithMany("SentMessages")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("GameModCrafters.Models.Transaction", b =>
                {
                    b.HasOne("GameModCrafters.Models.Commission", "Commission")
                        .WithMany("Transaction")
                        .HasForeignKey("CommissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameModCrafters.Models.User", "Payee")
                        .WithMany("Incomes")
                        .HasForeignKey("PayeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GameModCrafters.Models.User", "Payer")
                        .WithMany("Payments")
                        .HasForeignKey("PayerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Commission");

                    b.Navigation("Payee");

                    b.Navigation("Payer");
                });

            modelBuilder.Entity("GameModCrafters.Models.Commission", b =>
                {
                    b.Navigation("CommissionTrackings");

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("GameModCrafters.Models.CommissionStatus", b =>
                {
                    b.Navigation("Commissions");
                });

            modelBuilder.Entity("GameModCrafters.Models.Game", b =>
                {
                    b.Navigation("Commission");

                    b.Navigation("Mods");
                });

            modelBuilder.Entity("GameModCrafters.Models.Mod", b =>
                {
                    b.Navigation("Downloaded");

                    b.Navigation("Favorite");

                    b.Navigation("Log");

                    b.Navigation("ModComment");

                    b.Navigation("ModLikes");

                    b.Navigation("ModTags");
                });

            modelBuilder.Entity("GameModCrafters.Models.Tag", b =>
                {
                    b.Navigation("ModTags");
                });

            modelBuilder.Entity("GameModCrafters.Models.User", b =>
                {
                    b.Navigation("Commission");

                    b.Navigation("CommissionTrackings");

                    b.Navigation("ContactMessages");

                    b.Navigation("Downloaded");

                    b.Navigation("Incomes");

                    b.Navigation("Log");

                    b.Navigation("ModComment");

                    b.Navigation("ModLikes");

                    b.Navigation("Mods");

                    b.Navigation("Payments");

                    b.Navigation("ReceivedMessages");

                    b.Navigation("SentMessages");
                });
#pragma warning restore 612, 618
        }
    }
}
