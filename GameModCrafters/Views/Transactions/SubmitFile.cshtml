@model GameModCrafters.Models.Transaction
@{
    ViewData["Title"] = "SubmitFile";
}

<div class="main-bothside my-4">
    <h2>提交成品</h2>
    <hr />
    <div class="form">
        <div class="item-group">
            <div class="item">
                <label class="col-sm-2" for="Commission">@Html.DisplayNameFor(model => model.Commission)</label>
                <div class="col-sm-10" id="Commission">
                    <a href="/Commissions/Details/@Html.DisplayFor(model => model.Commission.CommissionId)">@Html.DisplayFor(model => model.Commission.CommissionTitle)</a>
                </div>
            </div>
        </div>

        <div class="item-group">
            <div class="item">
                <label class="col-sm-2" for="Payer">@Html.DisplayNameFor(model => model.Payer)</label>
                <div class="col-sm-10" id="Payer">
                    @Html.DisplayFor(model => model.Payer.Username) (@Html.DisplayFor(model => model.Payer.Email))
                </div>
            </div>

            <div class="item">
                <label class="col-sm-2" for="Payee">@Html.DisplayNameFor(model => model.Payee)</label>
                <div class="col-sm-10" id="Payee">
                    @Html.DisplayFor(model => model.Payee.Username) (@Html.DisplayFor(model => model.Payee.Email))
                </div>
            </div>
        </div>

        <div class="item-group">
            <div class="item">
                <label class="col-sm-2" for="CreateTime">@Html.DisplayNameFor(model => model.CreateTime)</label>
                <div class="col-sm-10" id="CreateTime">
                    @Html.DisplayFor(model => model.CreateTime)
                </div>
            </div>

            <div class="item">
                <label class="col-sm-2" for="Budget">@Html.DisplayNameFor(model => model.Budget)</label>
                <div class="col-sm-10" id="Budget">
                    @Html.DisplayFor(model => model.Budget) Mod Coin
                </div>
            </div>
        </div>

        <div class="item-group">
            <div class="textarea-item">
                <label class="col-sm-2" for="Describe">@Html.DisplayNameFor(model => model.Describe)</label>
                <div class="col-sm-10" id="Describe">
                    @Html.DisplayFor(model => model.Describe)
                </div>
            </div>
        </div>
    </div>

    <div class="submitPart">
        <input type="file" id="fileInput" />
        <button class="btn-item" type="button" id="uploadButton" disabled>確定上傳</button>
    </div>
</div>

<img id="gifImage" src="~/PreviewImage/buli.gif">

@section css{
    <link rel="stylesheet" href="~/css/DetailsTransactionStyle.css" />
}

@section js{
    <script>
        $(document).ready(function () {
            $('#fileInput').change(function () {
                if ($(this).val() == '') {
                    $('#uploadButton').prop('disabled', true);
                } else {
                    $('#uploadButton').prop('disabled', false);
                }
            });
        });

        $("#uploadButton").on("click", () => {
            var formData = new FormData();
            var fileInput = document.getElementById('fileInput');
            formData.append("file", fileInput.files[0]);
            formData.append("transactionId", "@Model.TransactionId");

            $.ajax({
                url: '/Transactions/UploadFile',
                type: 'POST',
                data: formData,
                processData: false,  // Important!
                contentType: false,  // Important!
                success: function (data) {
                    window.location.href = data;
                },
                error: function (err) {
                    // handle error
                }
            });
        });

        var img = document.getElementById('gifImage');
        var speed = 2;
        var direction = { x: speed, y: speed };
        img.style.transform = 'scaleX(-1)';

        img.style.left = img.offsetWidth / 2 + 'px';
        img.style.top = (window.innerHeight / 2 - img.offsetHeight / 2) + 'px';

        function animate() {
            var rect = img.getBoundingClientRect();
            if (rect.left < 0 || rect.right > window.innerWidth) {
                direction.x = -direction.x;

                img.style.transform = direction.x > 0 ? 'scaleX(-1)' : 'scaleX(1)';
            }
            if (rect.top < 0 || rect.bottom > window.innerHeight) {
                direction.y = -direction.y;
            }

            img.style.left = (img.offsetLeft + direction.x) + 'px';
            img.style.top = (img.offsetTop + direction.y) + 'px';

            requestAnimationFrame(animate);
        }

        requestAnimationFrame(animate);
    </script>

}

