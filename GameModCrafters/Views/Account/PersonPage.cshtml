@model PersonViewModel
@{
    var userCover = Model.BackgroundImage;
    var userAtavar = Model.Avatar;
    var commssions = Model.Commissions;
}
<div class="personbody">
    <div class="ImgWrap">
        @* @if (string.IsNullOrEmpty(userCover))
        {
        <img src="https://picsum.photos/1400/600/?random=10" class="img-fluid Img_cover" id="Cover_pic" alt="...">
        }
        else
        {
        <img src="@userCover" class="img-fluid Img_cover" id="Cover_pic" alt="...">
        }*@

        <img src="@userCover" class="img-fluid Img_cover" id="Cover_pic" alt="...">

    </div>
    <div class="container-fluid position_height">

        <div class="container Cover_container">
            <div class="Cover">
                <div class="pic_name">
                    <div class="personal_pic">


                        <img src="@userAtavar" id="personal_pic">
                        @*<img src="~/avatarimages/avatar_preview.jpg" />*@

                    </div>
                    <div class="Cover_text">
                        <h1 class="name" id="Username">@User.Identity.Name</h1>
                    </div>

                </div>

            </div>
            
                 <div class="Edit">
                    <button type="button" class="btn btn-secondary" data-bs-toggle="modal" data-bs-target="#Edit_pic_modal"
                            id="Editpicbtn">
                        編輯封面照片
                    </button>
                    <button type="button" class="btn btn-secondary" data-bs-toggle="modal"
                            data-bs-target="#Edit_Profile_modal">
                        編輯個人檔案
                    </button>
                </div>
            
           

        </div>
    </div>
    <!-- ----------Modal -->
    <!-- 封面照片 -->
    <div class="modal modal-xl" id="Edit_pic_modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
         aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="exampleModalLabel">編輯封面照片</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <button type="button" class="btn btn-secondary btn-sm " id="Edit_pic">上傳照片</button>
                    <!-- <input type="file" id="imageInput"> -->
                    <!-- <button type="button" class="btn btn-secondary btn-sm " id="cropButton">剪切</button> -->
                </div>
                <div class="modal_img">
                    <img src="" id="preview_cover_pic" alt="">
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary  CoverClose" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" id="cropcoverButton">確定</button>
                </div>
            </div>
        </div>
    </div>
    <div id="personPageContainer">
        <!-- 編輯個人檔案的模態框內容 -->
        <div class="modal modal-xl" id="Edit_Profile_modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
             aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog ">
                <div class="modal-content">
                    <div class="modal-header">
                        <h1 class="modal-title fs-5" id="exampleModalLabel">編輯個人檔案</h1>
                        <button type="button" class="btn-close fork_btn" data-bs-dismiss="modal"
                                aria-label="Close"></button>
                    </div>
                    <div class="modal-body person">
                        <button type="button" class="btn btn-secondary btn-sm " id="EditName_btn">編輯名字</button>
                        <form class="row g-3 nameform d-none" asp-action="PersonPage" asp-controller="Account" method="post">
                            <div class="col-sm-5">
                                <label for="inputUsername" class="visually-hidden">Username</label>
                                <input asp-for="Username" type="text" class="form-control" id="inputUsername" placeholder="username">
                                <span id="usernameError" class="text-danger"></span>
                            </div>
                            <div class="col-sm">
                                <button type="button" class="btn btn-primary btn-sm " id="confirm_Name_btn">確認</button>
                            </div>
                        </form>


                        <button type="button" class="btn btn-secondary btn-sm " id="Edit_Profile">上傳照片</button>

                        <button type="button" class="btn btn-secondary btn-sm " id="PayPalSetting_btn">設定PayPal帳戶</button>
                        <form class="row g-3 PayPalform d-none">
                            <!-- d-none-->
                            <div class="col-sm-5">
                                <label for="inputAccount" class="visually-hidden">PayPal帳號</label>
                                <input type="text" class="form-control" id="inputAccount" placeholder="PayPal帳號">
                                <span id="AccountError" class="text-danger"></span>
                            </div>
                            <div class="col-sm">
                                <button type="button" class="btn btn-primary btn-sm " id="confirm_PayPalAccount_btn">確認</button>
                            </div>
                        </form>


                    </div>
                    <!-- <div class="modal-body">
                        <button type="button" class="btn btn-secondary btn-sm " id="Edit_Name_btn">編輯名字</button>
                    </div> -->
                    <div class="modal_img">
                        <img src="" id="preview_person_pic" alt="">
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary personClose" data-bs-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-primary" id="croppersonButton">確定</button>
                    </div>
                </div>
            </div>

        </div>
    </div>
    <!-- 個人照片 -->
    <!-- ----------Modal -->
    <div class="container my-4 mod Released_mods" id="publishedModsContainer"></div>
    <div class="container wire"></div>

    <div class="container entrust Release_Area_Wrap paging" id="commissionsContainer"></div>

    <div class="container wire"></div>

    <div class="container my-4 mod Downloaded_mod" id="downloadedModsContainer"></div>
    <div class="container wire"></div>

    <div class="container my-4 mod favorite_mod" id="favoritedModsContainer"></div>
</div>


@section js{
    <script>

        $(document).ready(function () {
            //$('#commissionsContainer').load('/Account/GetCommissionsPartial');

            loadCommissions(1);
            CommissionsPageButton();

            });

        function loadCommissions(pageNumber) {

            $.ajax({
                url: '/Account/GetCommissionsPartial',
                data: {
                    page: pageNumber
                },
                success: function (data) {
                    $('#commissionsContainer').html(data);

                    
                    var totalPages = $('#totalPages').val();
                    // 更新分頁
                    updatePagination(pageNumber, totalPages);
                }
            });
        }

        function updatePagination(pageNumber, totalPages) {
            // 先清除現有的分頁
            $('#pagination').empty();

            // 加入上一頁按鈕
            $('#pagination').append('<li class="page-item ' + (pageNumber == 1 ? 'disabled' : '') + '" id="previous-page"><a class="page-link" href="#" data-page-number="' + (pageNumber - 1) + '" tabindex="-1" aria-disabled="true">Previous</a></li>');

            // 動態生成頁碼
            for (var i = 1; i <= totalPages; i++) {
                $('#pagination').append('<li class="page-item ' + (i == pageNumber ? 'active' : '') + '"><a class="page-link" href="#" data-page-number="' + i + '">' + i + '</a></li>');
            }

            // 加入下一頁按鈕
            $('#pagination').append('<li class="page-item ' + (pageNumber == totalPages ? 'disabled' : '') + '" id="next-page"><a class="page-link" href="#" data-page-number="' + (pageNumber + 1) + '">Next</a></li>');
        }

        function CommissionsPageButton() {
            $(document).on('click', '.page-link', function (event) {
                event.preventDefault();

                var page = $(this).data('page-number');
                loadCommissions(page);

                $('html, body').animate({
                    scrollTop: $('#commissionsContainer').offset().top
                }, 0);

            });
        }
    </script>

    <script>
        $(document).ready(function () {
            $('#publishedModsContainer').load('/Account/PublishedModsPartial');

            $(document).on('click', '.page-link-published', function (event) {
                event.preventDefault();
                console.log($(this).attr('href'));
                $('#publishedModsContainer').load($(this).attr('href'));

                $('html, body').animate({
                    scrollTop: $('#PublishedTitle').offset().top
                }, 0);
            });

            $('#favoritedModsContainer').load('/Account/FavoritedModsPartial');

            $(document).on('click', '.page-link-favorited', function (event) {
                event.preventDefault();
                console.log($(this).attr('href'));
                $('#favoritedModsContainer').load($(this).attr('href'));

                $('html, body').animate({
                    scrollTop: $('#FavoritedTitle').offset().top
                }, 0);
            });

            $('#downloadedModsContainer').load('/Account/DownloadedModsPartial');

            $(document).on('click', '.page-link-downloaded', function (event) {
                event.preventDefault();
                console.log($(this).attr('href'));
                $('#downloadedModsContainer').load($(this).attr('href'));

                $('html, body').animate({
                    scrollTop: $('#DownloadedTitle').offset().top
                }, 0);
            });
        });
    </script>

    <script>

        let cropperperson
        let cropBoxes = [];
        let croppercover; // 定義全局變量 croppercover

        function favorite_star() {
            let star_icons = document.querySelectorAll('.star_icon');
            star_icons.forEach(star_icon => {
                star_icon.addEventListener('click', function () {
                    star_icon.classList.toggle('active');
                });
            });
        }

        function Edit_Name() {
            let form = document.querySelector('.nameform')
            let confirm_btn = document.getElementById("confirm_Name_btn")
            let inputUsername = document.getElementById("inputUsername")
            let EditName_btn = document.getElementById("EditName_btn")
            let Username = document.getElementById("Username")
            EditName_btn.addEventListener('click', function () {
                if (form.classList.contains('d-none')) {
                    form.classList.remove('d-none')
                }
                else {
                    form.classList.add('d-none')
                }
            })
            confirm_btn.addEventListener('click', function () {
                let newName = inputUsername.value;
                console.log(newName)
                Username.textContent = newName;

            })
        }

        function PayPalAccountSetting() {
            let form = document.querySelector('.PayPalform')
            let confirm_btn = document.getElementById("confirm_PayPalAccount_btn")
            let inputAccount = document.getElementById("inputAccount")
            let PayPalSetting_btn = document.getElementById("PayPalSetting_btn")

            PayPalSetting_btn.addEventListener('click', function () {
                if (form.classList.contains('d-none')) {
                    form.classList.remove('d-none')
                }
                else {
                    form.classList.add('d-none')
                }
            })

        }

        function handlePersonImg() {
            let editbtn = document.getElementById('Edit_Profile')
            let preview_person_pic = document.getElementById('preview_person_pic')
            editbtn.addEventListener('click', function () {
                let input = document.createElement('input')
                input.type = 'file';
                input.accept = 'image/*';
                input.click();
                input.addEventListener('change', function () {
                    let reader = new FileReader()
                    reader.readAsDataURL(input.files[0])
                    reader.addEventListener('load', function () {
                        preview_person_pic.src = reader.result
                        if (cropperperson) {
                            cropperperson.destroy()
                        }
                        initCropPersonImg()
                    })
                })
            })
        }

        function initCropPersonImg() {
            let cropButton = document.getElementById("croppersonButton");
            let personal_pic = document.getElementById("personal_pic");
            let previewPersonPic = document.getElementById("preview_person_pic");
            cropperperson = new Cropper(previewPersonPic, {
                aspectRatio: 1 / 1,
                cropBoxResizable: true,
                cropBoxMovable: true,
                autoCropArea: 1,
                viewMode: 2
            });
            let observer = new MutationObserver(function (mutations) {
                mutations.forEach(function (mutation) {
                    cropBoxes = document.querySelectorAll('.cropper-crop-box, .cropper-view-box');
                    cropBoxes.forEach((box) => {
                        box.style.borderRadius = '50%';
                    });
                });
            });
            let options = {
                childList: true,
                attributes: true,
                subtree: true,
            };
            observer.observe(document.body, options);
            let personClose = document.querySelector('.personClose');
            let fork_btn = document.querySelector('.btn-close.fork_btn');
            personClose.addEventListener('click', function () {
                cropBoxes.forEach((box) => {
                    box.style.borderRadius = 'none';
                });
                observer.disconnect(); //停止MutationObserver实例的观察功能的方法
                cropperperson.destroy();
            })
            fork_btn.addEventListener('click', function () {
                cropBoxes.forEach((box) => {
                    box.style.borderRadius = 'none';
                });
                observer.disconnect(); //停止MutationObserver实例的观察功能的方法
                cropperperson.destroy();
            })
            // 當按鈕被點擊時，剪裁圖片並在控制台中輸出剪裁後的圖片數據
            cropButton.addEventListener('click', function () {
                //let croppedCanvas = cropperperson.getCroppedCanvas();
                //let dataUrl = croppedCanvas.toDataURL();

                cropperperson.getCroppedCanvas().toBlob(function (blob) {
                    // 建立一個 FormData 對象，用於將圖片數據傳遞給控制器
                    console.log("111")
                    let formData = new FormData();
                    formData.append('croppedPersonImage', blob, "Personcropped.jpg");
                    //formData.append('imageType', 'person'); // 传递imageType参数
                    // 上傳圖片
                    fetch('/Account/CropperAvatarImage', {
                        method: 'POST',
                        body: formData
                    })
                        .then(response => {
                            if (response.ok) {
                                return response.json();
                            } else {
                                throw new Error('Network response was not ok.');
                            }
                        })
                        .then(data => {
                            // 根據需要進行處理回傳的數據
                            console.log(data);
                            personal_pic.src = data.fileUrl;
                            if (data.message == "更新頭像成功")
                            {
                                $("#popover-avatar").attr('src',data.fileUrl)
                            }
                            cropperperson.destroy();
                            previewPersonPic.src = '';
                        })
                        .catch(error => {
                            console.error('Error:', error);
                        });
                }, 'image/jpeg');

                cropperperson.destroy(); // 清除緩存


                //personal_pic.src = croppedCanvas.toDataURL();

                // observer.disconnect();

            });
        }

        function handleCoverImg() {
            let editbtn = document.getElementById('Edit_pic');
            let cropButton = document.getElementById('cropcoverButton');
            let preview_cover_pic = document.getElementById('preview_cover_pic');
            editbtn.addEventListener('click', function () {
                let input = document.createElement('input');
                input.type = 'file';
                input.accept = 'image/*';
                input.click();
                input.addEventListener('change', function () {
                    let reader = new FileReader();
                    reader.readAsDataURL(input.files[0]);
                    reader.addEventListener('load', function () {
                        preview_cover_pic.src = reader.result;
                        if (croppercover) {
                            croppercover.destroy(); // 如果有，清除緩存
                        
                        }
                        initCoverCropper(); // 初始化新的 cropper 實例
                    });
                });
            });


        }

        function initCoverCropper() {
            let preview_cover_pic = document.getElementById('preview_cover_pic');
            croppercover = new Cropper(preview_cover_pic, {
                aspectRatio: 14 / 6,
                cropBoxResizable: true,
                cropBoxMovable: true,
                autoCropArea: 1,
                viewMode: 2

                //aspectRatio: 14 / 6,
                //cropBoxResizable: true,
                //cropBoxMovable: true,
                //autoCropArea: 1,
                //viewMode: 2,
                //background: false,
                //minContainerWidth: 760, // 設置容器的最小寬度
                //minContainerHeight: 400, // 設置容器的最小高度
            });
            let cropButton = document.getElementById('cropcoverButton');
            let Cover_pic = document.getElementById('Cover_pic');
            cropButton.addEventListener('click', function () {
                //let croppedCanvas = croppercover.getCroppedCanvas();
                //Cover_pic.src = croppedCanvas.toDataURL();
                //croppercover.destroy(); // 清除緩存

                croppercover.getCroppedCanvas().toBlob(function (blob) {
                    // 建立一個 FormData 對象，用於將圖片數據傳遞給控制器
                    console.log("111")
                    let formData = new FormData();
                    formData.append('croppedCoverImage', blob, "Covercropped.jpg");
                    //formData.append('imageType', 'person'); // 传递imageType参数
                    // 上傳圖片
                    fetch('/Account/CropperBackgroundImage', {
                        method: 'POST',
                        body: formData
                    })
                        .then(response => {
                            if (response.ok) {
                                return response.json();
                            } else {
                                throw new Error('Network response was not ok.');
                            }
                        })
                        .then(data => {
                            // 根據需要進行處理回傳的數據
                            console.log(data);
                            Cover_pic.src = data.fileUrl;
                            croppercover.destroy();
                            preview_cover_pic.src = '';
                        })
                        .catch(error => {
                            console.error('Error:', error);
                        });
                }, 'image/jpeg');

                cropperperson.destroy(); // 清除緩存
                $("#preview_person_pic").arrr("");
            });
        }

        function ChangName() {
            $("#confirm_Name_btn").click(function () {
                var username = $("#inputUsername").val();
                $.post('/Account/IsUsernameInUse', { username: username }, function (data) {
                    if (data == "更改成功") {
                        // 顯示成功訊息
                        $("#usernameError").text(data).removeClass("text-danger").addClass("text-success");
                        $("#divuser").text(username);
                    } else {
                        // 顯示錯誤訊息
                        $("#usernameError").text(data).removeClass("text-success").addClass("text-danger");
                    }
                });
            });
        }

        function SetPayPalAccount(){
            $("#confirm_PayPalAccount_btn").on("click", () => {
                var account = $("#inputAccount").val();
                $.post('/Account/SetPayPalAccount', { account: account }, function(data){
                    if (data == "更改成功"){
                        $("#AccountError").text(data).removeClass("text-danger").addClass("text-success");
                    }
                    else{
                        $("#AccountError").text("錯誤").removeClass("text-success").addClass("text-danger");
                    }
                })
            })
        }

        $(() => {
            handleCoverImg();
            handlePersonImg();
            Edit_Name();
            PayPalAccountSetting();
            favorite_star();
            ChangName();
            SetPayPalAccount();
        });

    </script>
    <script>
        $(() => {
            $.ajax({
                url: '/Account/GetUserName',
                type: 'GET',
                success: function (result) {
                    $('#Username').text(result);

                }
            });
        })
    </script>
}


@section css{
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.css">
    <script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.js"></script>

    <link rel="stylesheet" href="https://cdn.bootcss.com/cropperjs/2.0.0-alpha.1/cropper.css">
    <script src="https://cdn.bootcss.com/cropperjs/2.0.0-alpha.1/cropper.js"></script>
    <script src="https://cdn.bootcss.com/jquery/3.5.0/jquery.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.0/css/all.min.css">
    <style>
        * {
            list-style: none;
            padding: 0;
            margin: 0;
        }

        .personbody{
            flex-grow: 1;
        }
        body {
            background-color: azure;
        }

        .ImgWrap {
            width: 100%;
            height: 600px;
            object-fit: contain;
            /* overflow: hidden; */
            width: 100%;
            height: 100%;
            /* position: relative; */
        }

            .ImgWrap .Img_cover {
                object-fit: cover;
                width: 100%;
                display: block;
                margin: auto;
                height: fit-content;
            }

        /* ---------Modal */
        .modal_img {
            /* max-width: 1400px; */
            /* max-height: 500px; */
            /* overflow: hidden; */
            text-align: center;
        }

            .modal_img img {
                object-fit: cover;
                width: 100%;
                height: auto;
                position: relative;
            }

        #Edit_Profile_modal .person {
            display: flex;
            flex-direction: column;
            gap: 10px;
        }

            #Edit_Profile_modal .person button {
                width: 150px;
            }

            #Edit_Profile_modal .person .form-text {
                color: red;
            }

        /* .cropper-crop-box.activeradius, .cropper-view-box.activeradius {
            border-radius: 50%;
        } */

        /* ---------Modal */
        .ImgWrap button {
            background-color: #ccc;
            color: #000;
            border: 1px solid gray;
            padding: 10px;
            font-size: 16px;
        }


        .Cover .personal_pic {
            width: 200px;
            height: 200px;
            overflow: hidden;
            /* position: absolute; */
        }

            .Cover .personal_pic img {
                display: block;
                /* width: 200px;
            height: 200px; */
                width: 100%;
                height: 100%;
                object-fit: cover;
                border-radius: 50%;
                /* background-size: cover; */
                /* background-position: center; */
            }

        .Cover .pic_name {
            display: flex;
            align-items: center;
            flex-direction: row;
        }

        .Cover .Cover_text {
            margin: 0 20px;
            padding: 1px 20px;
            background-color: #fff;
            border-radius: 20px;
            color: gray;
        }

        .Cover {
            /* display: flex; */
            /* justify-content: center; */
        }

        .Cover_container {
            /* display: flex;
            justify-content: space-between;
            align-items: flex-end; */
            padding: 20px 0 20px 0;
            border-bottom: gray solid 3px;
            /* position: absolute;
            bottom: 25%;
            left: 0%;
            right: 0%;
            z-index: 5; */
        }

            .Cover_container .Edit {
                display: flex;
                justify-content: end;
                /* background-color: aqua; */
            }

                .Cover_container .Edit button {
                    margin: 10px;
                }

        .person .nameform, .person .PayPalform {
            align-items: center;
        }
        /* ---------------發布mod */
        .row .text .describe {
            text-indent: 3em;
            overflow: hidden;
            text-overflow: ellipsis;
            font-size: 13px;
            display: -webkit-box;
            -webkit-line-clamp: 3;
            -webkit-box-orient: vertical;
        }

        .mod .data {
            display: flex;
            width: 100%;
            padding: 5px 15px;
            padding-top: 10px;
            justify-content: space-between;
            background-color: #ccc;
            vertical-align: top;
        }

            .mod .data h3 {
                font-size: 13px;
            }

        .mod .name_price {
            display: flex;
            justify-content: space-between;
        }

        .mod .text {
            padding: 5px 10px;
            font-size: 20px;
        }

        .mod .name_price h3 {
            font-size: 20px;
        }

        .mod .detail h3 {
            font-size: 15px;
        }

        .mod .detail h2 {
            font-size: 20px;
        }

            .mod .detail h2 span {
                margin-right: 5px;
                color: white;
            }

        .mod .tag {
            color: orange;
        }

        .mod .detail span {
            color: gray;
        }

        .mod .row .card {
            margin: 10px 0;
        }

        .more-mod-Pagination {
            text-align: center;
            padding: 10px;
        }

            .more-mod-Pagination nav {
                display: inline-block;
            }
        /* ---------委託的mod--------- */
        .Release_Area_Wrap {
            background-color: #bdbcbc;
            /* background-image: linear-gradient(to bottom, #d7e9f7, #c6dced); */
            border-top: 1px solid #a4b6c3;
            border-bottom: 1px solid #a4b6c3;
            margin: 10px auto;
            padding: 10px 0;
            /* display: flex;
            justify-content: center;
            align-items: center; */
        }

        .CommissionPage {
            display: flex;
            justify-content: center;
        }

        .PersonalCommissions-Top{
            display:flex;
            justify-content: space-between;
        }

        .CommissionRow {
            display: flex;
            align-items: center !important;
        }

        .entrust_link a {
            padding: 0 5px;
        }

        .entrust .row {
            /* background-color: #ccc; */
            padding: 5px;
        }

        .rowwrap {
            display:flex;
            align-items:center !important
        }

        .rowwrap a{
            text-decoration:none;
            color:black;
        }

        .GameNameTitle, .titleTitle, .SenderDateTitle, .LastReplyTitle, .statusTitle, .SendernNameTitle {
            padding:20px;
        }



        .rowwrap .GameName, .rowwrap .title, .rowwrap .status, .rowwrap .SendernName, .rowwrap .LastReply, .rowwrap .SenderDate {
            padding: 15px;
        }

        .rowwrap:nth-child(even) .GameName:hover {
            background-color: #e9e9e9;
        }

        .rowwrap:nth-child(odd) .GameName:hover {
            background-color: #f6f6f6;
        }

        .More:hover{
            background-color: #f6f6f6;
            text-decoration: none;
            color: black;
        }

        .More{
            padding: 3px;
        }

        .More a {
            text-decoration: none;
            color: black;
        }
       
        .rowwrap:nth-child(even) .title:hover {
            background-color: #e9e9e9;
        }

        .rowwrap:nth-child(odd) .title:hover {
            background-color: #f6f6f6;
        }
      
        .rowwrap:nth-child(even) {
            background: linear-gradient(to right, #f6f6f6, #e9e9e9);
        }

        .rowwrap:nth-child(odd) {
            background: linear-gradient(to right, #e9e9e9, #f6f6f6);
        }

        .row .title {
            display: flex;
            justify-content: center;
        }

        .Release_Area_Wrap {
            padding: 20px;
        }
        /* 收藏的mod--------------- */
        .favorite_mod .card {
            position: relative;
        }

            .favorite_mod .card .favorite_icon {
                position: absolute;
                background-color: red;
                padding: 5px;
                width: fit-content;
                box-shadow: 2px 2px 10px 2px #888;
                top: 0;
                left: 5px;
            }

                .favorite_mod .card .favorite_icon .star_icon {
                    /* font-size: 30px; */
                    cursor: pointer;
                    color: gold;
                }

        .triangle {
            width: 0;
            height: 0;
            border-left: 14px solid transparent;
            border-right: 14px solid transparent;
            border-top: 10px solid red;
            position: absolute;
            left: 0;
            top: 34px;
        }

        .star_icon.active {
            color: #fff !important;
        }

        /* ------分割線---mod------ */
        .wire {
            border-bottom: 3px solid gray;
        }

        #preview_cover_pic {
            width: 100%;
            /* 設定圖片寬度為 100% */
            height: auto;
            /* 設定圖片高度為自動 */
            object-fit: contain;
            /* 保持圖片寬高比 */
        }
       

        .card img{
            width:100%;
        }
    </style>
}

